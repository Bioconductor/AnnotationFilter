# Generated by roxygen2: do not edit by hand

export(AnnotationFilter)
export(AnnotationFilterList)
export(CdsEndFilter)
export(CdsStartFilter)
export(EntrezFilter)
export(ExonEndFilter)
export(ExonIdFilter)
export(ExonNameFilter)
export(ExonRankFilter)
export(ExonStartFilter)
export(GRangesFilter)
export(GeneBiotypeFilter)
export(GeneEndFilter)
export(GeneIdFilter)
export(GeneNameFilter)
export(GeneStartFilter)
export(GenenameFilter)
export(ProteinIdFilter)
export(SeqNameFilter)
export(SeqStrandFilter)
export(SymbolFilter)
export(TxBiotypeFilter)
export(TxEndFilter)
export(TxIdFilter)
export(TxNameFilter)
export(TxStartFilter)
export(UniprotFilter)
export(feature)
export(logicOp)
export(not)
exportClasses(AnnotationFilter)
exportClasses(AnnotationFilterList)
exportClasses(CdsEndFilter)
exportClasses(CdsStartFilter)
exportClasses(CharacterFilter)
exportClasses(DoubleFilter)
exportClasses(EntrezFilter)
exportClasses(ExonEndFilter)
exportClasses(ExonIdFilter)
exportClasses(ExonNameFilter)
exportClasses(ExonRankFilter)
exportClasses(ExonStartFilter)
exportClasses(GRangesFilter)
exportClasses(GeneBiotypeFilter)
exportClasses(GeneEndFilter)
exportClasses(GeneIdFilter)
exportClasses(GeneNameFilter)
exportClasses(GeneStartFilter)
exportClasses(GenenameFilter)
exportClasses(IntegerFilter)
exportClasses(ProteinIdFilter)
exportClasses(SeqNameFilter)
exportClasses(SeqStrandFilter)
exportClasses(SymbolFilter)
exportClasses(TxBiotypeFilter)
exportClasses(TxEndFilter)
exportClasses(TxIdFilter)
exportClasses(TxNameFilter)
exportClasses(TxStartFilter)
exportClasses(UniprotFilter)
exportMethods(condition)
exportMethods(convertFilter)
exportMethods(distributeNegation)
exportMethods(field)
exportMethods(not)
exportMethods(show)
exportMethods(supportedFilters)
exportMethods(value)
importClassesFrom(GenomicRanges,GRanges)
importFrom(GenomicRanges,GRanges)
importFrom(GenomicRanges,show)
importFrom(lazyeval,f_eval)
importFrom(methods,callNextMethod)
importFrom(methods,initialize)
importFrom(methods,is)
importFrom(methods,new)
importFrom(methods,show)
importFrom(methods,validObject)
importFrom(utils,head)
importFrom(utils,tail)
